@model SlijterijSjonnieLoper_version2.ViewModels.GenerateReservationFourBottlesViewModel

@{
    ViewBag.Title = "GenerateNewReservation";
}

<h2>Generate new reservation</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Partial("_Notifications")


    <div id="appendtothis" class="form-group">
        @Html.LabelFor(model => model.StoreChoiceWhiskeyFromDropDownList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StoreChoiceWhiskeyFromDropDownList, (List<SelectListItem>)Model.GenerateDropDownDataFromWhiskey, "Select your whiskey")
            @Html.ValidationMessageFor(model => model.StoreChoiceWhiskeyFromDropDownList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoreChoiceAmountOfBottlesWhiskey, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StoreChoiceAmountOfBottlesWhiskey, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StoreChoiceAmountOfBottlesWhiskey, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="appendtothis" class="form-group">
        @Html.LabelFor(model => model.StoreChoiceWhiskeyFromDropDownList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StoreChoiceWhiskeyFromDropDownList2, (List<SelectListItem>)Model.GenerateDropDownDataFromWhiskey, "Select your whiskey")
            @Html.ValidationMessageFor(model => model.StoreChoiceWhiskeyFromDropDownList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoreChoiceAmountOfBottlesWhiskey, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StoreChoiceAmountOfBottlesWhiskey2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StoreChoiceAmountOfBottlesWhiskey, "", new { @class = "text-danger" })
        </div>
    </div>

    <div id="appendtothis" class="form-group">
        @Html.LabelFor(model => model.StoreChoiceWhiskeyFromDropDownList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StoreChoiceWhiskeyFromDropDownList3, (List<SelectListItem>)Model.GenerateDropDownDataFromWhiskey, "Select your whiskey")
            @Html.ValidationMessageFor(model => model.StoreChoiceWhiskeyFromDropDownList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoreChoiceAmountOfBottlesWhiskey, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StoreChoiceAmountOfBottlesWhiskey3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StoreChoiceAmountOfBottlesWhiskey, "", new { @class = "text-danger" })
        </div>
    </div>


    <div id="appendtothis" class="form-group">
        @Html.LabelFor(model => model.StoreChoiceWhiskeyFromDropDownList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StoreChoiceWhiskeyFromDropDownList4, (List<SelectListItem>)Model.GenerateDropDownDataFromWhiskey, "Select your whiskey")
            @Html.ValidationMessageFor(model => model.StoreChoiceWhiskeyFromDropDownList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoreChoiceAmountOfBottlesWhiskey, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StoreChoiceAmountOfBottlesWhiskey4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StoreChoiceAmountOfBottlesWhiskey, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input name="command" type="submit" value="Create another whiskey" class="btn btn-default" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoreChoiceCustomerFromDropDownList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StoreChoiceCustomerFromDropDownList, (List<SelectListItem>)Model.GenerateDropDownDataFromCustomer, "Select your customer")
            @Html.ValidationMessageFor(model => model.StoreChoiceCustomerFromDropDownList, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.bestellingModel.DateOfCompletionOrder, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bestellingModel.DateOfCompletionOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bestellingModel.DateOfCompletionOrder, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.bestellingModel.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bestellingModel.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bestellingModel.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.bestellingModel.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bestellingModel.StreetName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bestellingModel.StreetName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.bestellingModel.StreetNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bestellingModel.StreetNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bestellingModel.StreetNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.bestellingModel.HouseNumberAddition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bestellingModel.HouseNumberAddition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bestellingModel.HouseNumberAddition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.bestellingModel.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bestellingModel.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bestellingModel.PostalCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input name="command" type="submit" value="Create" class="btn btn-warning" />
        </div>
    </div>


</div>
}
