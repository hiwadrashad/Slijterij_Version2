@model SlijterijSjonnieLoper_version2.ViewModels.GenerateReservationViewModel

@{
    ViewBag.Title = "GenerateNewReservation";
}


<h2>GenerateNewReservation</h2>

@using (Html.BeginForm("GenerateNewReservation", "Reservation", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Partial("_Notifications")
    <div id="appendtothis">
        <div class="form-group">
            @Html.LabelFor(model => model.StoreChoiceWhiskeyFromDropDownList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StoreChoiceWhiskeyFromDropDownList, (List<SelectListItem>)Model.GenerateDropDownDataFromWhiskey, "Select your whiskey")
                @Html.ValidationMessageFor(model => model.StoreChoiceWhiskeyFromDropDownList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StoreChoiceAmountOfBottlesWhiskey, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StoreChoiceAmountOfBottlesWhiskey, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StoreChoiceAmountOfBottlesWhiskey, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="buttonid" name="command" type="submit" value="Create another one" class="btn btn-default" />
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.StoreChoiceCustomerFromDropDownList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StoreChoiceCustomerFromDropDownList, (List<SelectListItem>)Model.GenerateDropDownDataFromCustomer, "Select your customer")
                @Html.ValidationMessageFor(model => model.StoreChoiceCustomerFromDropDownList, "", new { @class = "text-danger" })
            </div>
        </div>

 

        <div class="form-group">
            @Html.LabelFor(model => model.bestellingModel.DateOfCompletionOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bestellingModel.DateOfCompletionOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bestellingModel.DateOfCompletionOrder, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.bestellingModel.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bestellingModel.City, new { htmlAttributes = new { @class = "form-control", Value = "tehsij" } })
                @Html.ValidationMessageFor(model => model.bestellingModel.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bestellingModel.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bestellingModel.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bestellingModel.StreetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bestellingModel.StreetNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bestellingModel.StreetNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bestellingModel.StreetNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bestellingModel.HouseNumberAddition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bestellingModel.HouseNumberAddition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bestellingModel.HouseNumberAddition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bestellingModel.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bestellingModel.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bestellingModel.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input name="command" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>

</div>
}
<script>
    @*var amountoftimesclicked = 0;

document.getElementById("buttonid").onclick =
    function () {

        amountoftimesclicked = amountoftimesclicked + 1;
        if (amountoftimesclicked <= 5) {

            var values = [];
            @foreach (var item in Model.GenerateDropDownDataFromWhiskeyForJavascript)
            { 
            @:values.push("@item");
            }
            var firstdiv = document.createElement("div");
            var seconddiv = document.createElement("div");
            var textboxvalue = document.createElement("input")
            textboxvalue.name = "amountofbottles" + amountoftimesclicked.toString();
            var select = document.createElement("select");
            select.name = "whiskey" + amountoftimesclicked.toString();
 

            for (const val of values) {
                var option = document.createElement("option");
                option.value = val;
                option.text = val.charAt(0).toUpperCase() + val.slice(1);
                select.appendChild(option);
            }

            var label = document.createElement("label");
            var labelinput = document.createElement("label");
            label.innerHTML = "Whiskey "
            labelinput.innerHTML = "Amount of bottles ";

            seconddiv.appendChild(labelinput).appendChild(textboxvalue);
            seconddiv.classList.add("form-group");
            firstdiv.appendChild(label).appendChild(select);
            firstdiv.classList.add("form-group");
            document.getElementById("appendtothis").prepend(seconddiv);
            document.getElementById("appendtothis").prepend(firstdiv);

            // firstdiv.id = "divid"
            //seconddiv.appendChild(firstdiv);
            //seconddiv.classList.add("col-md-offset-2", "col-md-10");
            //var appenditem = document.getElementById("appendtothis").cloneNode;
            //var basediv = document.createElement("div")
            //var inputelement = document.createElement("input");
            //basediv.appendChild(inputelement);
            //appenditem.appendChild(basediv);
        }
        else
        {
            alert("Maximum allowed whiskey's per person is 5");
        }
    }*@
</script>